{
  "name": "3xsd",
  "tagline": "3xsd is a native epoll server serving TCP/UDP connections, a high performance static web server, a failover dns server, a http-based distributed file server, a load-balance proxy-cache server, and a 'warp drive' server. Written in python, take the full power of multi-cores.",
  "body": "##3xsd\r\n3xsd is a native epoll server serving TCP/UDP connections, a high performance static web server, a\r\nfailover dns server, a http-based distributed file server, a load-balance proxy-cache server, and\r\na 'warp drive' server. Written in python, take the full power of multi-cores.\r\n\r\n##Features in detail:\r\n\r\n###3wsd - web server\r\n       supporting: static files, event driven(epoll), using mmap & sendfile to send files,\r\n       in-mem xcache, transparent gzip content transfer with fixed length(small file) & \r\n       chunked(large file), persistent storage of gzip files,\r\n       partial support of WebDAV(PUT/DELETE), pipelining support\r\n       \r\n###3nsd - dns server\r\n       supporting: only A record resolution, domainname failover(refer to conf file),\r\n       ip icmp probe & hide when fail, round robbin ip resolving\r\n       global DNS Left-Right Range Resolve(LRRR)(experimental)\r\n       \r\n###3zsd - proxy server\r\n       supporting: load balance backend servers, in-mem file caching & \r\n       persistent cache file storage\r\n\r\n###3fsd - distribute web file system\r\n       supporting: mass unlimitted file storage, easy to expand,\r\n       O(1) location algorithm, non-centralized, can work with standard web server(WebDAV)\r\n       in proxy mode, file redundancy, file persistent caching\r\n\r\n###3wdd - 'warp drive' server\r\n       supporting: data tunneling over UDT and tun,\r\n       better congestion control than TCP/UDP over wan link,\r\n       better thoughput(above 80%) over wan link, refer to:\r\n       http://www.c-s-a.org.cn/ch/reader/create_pdf.aspx?file_no=20091035\r\n       tunnel ip/mtu/txqueuelen/route define, auto create/recreate/destroy\r\n       encrypt packages through AES-128-ECB/CBC/CFB\r\n       tunnel on-the-fly compress with zlib/lzo\r\n       tunnel data relaying\r\n       route metric, routing data through different path, depending on tunnel rtt(choose the best one)\r\n\r\nMore to find in .conf file.\r\n\r\n##Performance:\r\n\r\n###3wsd:\r\n  Small file under 1KB single process test(full in-mem), contrast with nginx configuring\r\n  accept_mutex off, 80% performance.\r\n  Multi processes test, with reuse_port enabling kernel, 95% performance of nginx(and beyond,\r\n  may be 105% or more, based on process number, I tested 2-4).\r\n  The tests above is not quite strictï¼Œ but I just want to say that it's fast enough.\r\n\r\n  And with pipelining enabled, 3wsd will perform better with 3-4 requests/send(5%-10%\r\n  performance increase), 2 requests/send have the same speed with non-piplining.\r\n\r\n###3zsd:\r\n  About 80% performance of 3wsd.\r\n  \r\n###3nsd:\r\n  Fast enough...about 2800-3000 queries/s per processes, with 1GHz bcm2709 4-cores ARMv7\r\n  cpu testing, better when multi-processes with reuse_port enabling kernel.\r\n  \r\n###3fsd:\r\n  Same with 3zsd.\r\n  \r\n###3wdd:\r\n  Early testing indicated that:\r\n  UDT tunnel(no encrypt) performing 50%-60% speed of direct TCP connection with ZetaTCP,\r\n  and package lost rate remaining below 0.6%, while direct connection has 1.4%-3%.\r\n  (Test CN-US WAN link with 150ms-280ms latency, through the always-jammed CUCN submarine cable)\r\n  However, UDT tunnel beats normal TCP connection without ZetaTCP, with 50% - 4 times\r\n  (commonly 1-2 times) outperforming.(v)(Test link like above)\r\n  And an encrypted UDT tunnel will has 50% performance decrease.\r\n\r\n###More performance:\r\nThere are at lease two ways to increase the performance of 3xsd:\r\n\r\n       1.Install Cython, and rename _3xsd.py to _3xsd.pyx, run it. \r\n       Cython will compile _3xsd.py lib into a _3xsd.so file, using static type\r\n       declarations. This can gain about 5%-6% performance increasement.\r\n       2.Use PyPy.This can gain about 10%-15% performance increasement(or more).\r\n\r\n#OS requirement & install: \r\n\r\nCentOS 6/7 with python 2.6/2.7, Debian 6/7. Python 2.7 recommended.\r\n\r\nDoing this before running the program(minimal requirement):\r\n\r\n       yum install python-gevent pysendfile python-setproctitle python-psutil python-pip\r\n       \r\n       (python-pip is optional if install dpkt)\r\n  \r\nDpkt module is also needed when running 3nsd DNS server, pip install it.\r\n\r\nIf you want to use 3wdd, python-pytun, pyudt4, pycrypto, python-lzo are also needed.\r\n\r\n       yum install python-crypto2.6 python-lzo\r\n\r\nwill quickly install pycrypto(probably do some 'linking' works) and lzo. The other two depended on pip install.\r\n\r\nProbably you need this easy-install.pth file in python's site-packages dir:\r\n\r\n       import sys; sys.__plen = len(sys.path)\r\n       ./pycrypto-2.6.1-py2.6-linux-x86_64.egg\r\n       ./pyudt4-0.6.0-py2.6-linux-x86_64.egg\r\n       import sys; new=sys.path[sys.__plen:]; del sys.path[sys.__plen:]; p=getattr(sys,'__egginsert',0); sys.path[p:p]=new;          sys.__egginsert = p+len(new)\r\n\r\nI provide a pre-compiled package [pyudt_tun-centos6-x86_64.tar.gz](https://github.com/zihuaye/3xsd/blob/master/pyudt_tun-centos6-x86_64.tar.gz) to simplify\r\nthe installation procedure of pyudt4 & python-pytun.\r\n\r\nBe aware of pyudt4 having some bugs, you'd better download it's source code of epoll-fixes branch and \r\napply the patch I offered. See changelog.txt v0.0.20  2016.03.07 fixed section for detail.\r\n(Already included in [pyudt_tun-centos6-x86_64.tar.gz](https://github.com/zihuaye/3xsd/blob/master/pyudt_tun-centos6-x86_64.tar.gz))\r\n\r\nOr, of cause you can let pip do it all for you(not including patching pyudt4):\r\n\r\n       pip install 3xsd\r\n\r\nIn a debian, you can use apt-get to install python-pip(pip) or python-setuptools(easy_install),\r\nthen to install the packages following.\r\n\r\nPython Packages(Modules) version reference:\r\n\r\n       gevent==0.13.8(1.0.1, 1.1)\r\n       greenlet==0.4.2\r\n       pysendfile==2.0.1\r\n       setproctitle==1.0.1\r\n       psutil==0.6.1\r\n       dpkt==1.6(1.8.6)\r\n       python-pytun==2.2.1\r\n       pyudt4==0.6.0(epoll-fixes branch)\r\n       pycrypto==2.6.1\r\n       python-lzo==1.8\r\n\r\nSystem libs version reference:\r\n\r\n       libevent-1.4.13-4(not actually used, just needed for gevent to function)\r\n       udt-4.11-6\r\n       lzo-2.03-3.1\r\n\r\nTo install a module of specific version(like gevent 0.13.8), you can:\r\n\r\n       pip install gevent==0.13.8\r\n\r\nThis will install the latest version of gevent(pypy will need it):\r\n\r\n       pip install git+git://github.com/surfly/gevent.git#egg=gevent\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}